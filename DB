--
-- PostgreSQL database dump
--

-- Dumped from database version 16.2
-- Dumped by pg_dump version 16.2

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: get_role_user_counts(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_role_user_counts() RETURNS TABLE(role_name text, user_count integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
    SELECT 
        "Role"."Role_name",
        COUNT("User_Role"."User")::integer AS User_count
    FROM 
        public."Role"
    LEFT JOIN 
        public."User_Role" ON "Role"."ID_Role" = "User_Role"."Role"
    GROUP BY 
        "Role"."Role_name"
    ORDER BY 
        User_count DESC;
END;
$$;


ALTER FUNCTION public.get_role_user_counts() OWNER TO postgres;

--
-- Name: get_users_with_roles(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.get_users_with_roles() RETURNS TABLE(user_name text, role_name text)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
    SELECT 
        "User"."User_name",
        "Role"."Role_name"
    FROM 
        public."User"
    LEFT JOIN 
        public."User_Role" ON "User"."ID_User" = "User_Role"."User"
    LEFT JOIN 
        public."Role" ON "User_Role"."Role" = "Role"."ID_Role"
    ORDER BY 
        "User"."User_name";
END;
$$;


ALTER FUNCTION public.get_users_with_roles() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: Role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Role" (
    "ID_Role" integer NOT NULL,
    "Role_name" text NOT NULL
);


ALTER TABLE public."Role" OWNER TO postgres;

--
-- Name: Role_ID_Role_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."Role" ALTER COLUMN "ID_Role" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."Role_ID_Role_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: User; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."User" (
    "ID_User" integer NOT NULL,
    "User_name" text NOT NULL
);


ALTER TABLE public."User" OWNER TO postgres;

--
-- Name: User_ID_User_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."User" ALTER COLUMN "ID_User" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."User_ID_User_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: User_Role; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."User_Role" (
    "ID" integer NOT NULL,
    "Role" integer NOT NULL,
    "User" integer NOT NULL
);


ALTER TABLE public."User_Role" OWNER TO postgres;

--
-- Name: User_Role_ID_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."User_Role" ALTER COLUMN "ID" ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public."User_Role_ID_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: Role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Role" ("ID_Role", "Role_name") FROM stdin;
1	Администратор
2	Директор
3	Покупатель
4	Менеджер
5	Бухгалтер
6	Поставщик
\.


--
-- Data for Name: User; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."User" ("ID_User", "User_name") FROM stdin;
1	Орбитаева Анастасия
2	Жучков Михаил
3	Стасова Анна
4	Багиров Денис
5	Крылова Дария
6	Табкина Екатерина
7	Галичева Ксения
8	Жиглов Артём
9	Петров Алексей
10	Шишкин Илья
11	Колзиков Никита
12	Тутова Елизавета
13	Абаева Наталья
14	Чибисов Вадим
15	Хомяков Юрий
\.


--
-- Data for Name: User_Role; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."User_Role" ("ID", "Role", "User") FROM stdin;
1	6	12
2	6	14
3	5	8
4	5	13
5	4	6
6	4	15
7	4	12
8	3	11
9	3	10
10	3	9
11	3	8
12	3	7
13	3	6
14	3	5
15	3	4
16	3	3
17	3	2
18	1	3
19	1	2
20	2	1
\.


--
-- Name: Role_ID_Role_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."Role_ID_Role_seq"', 6, true);


--
-- Name: User_ID_User_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."User_ID_User_seq"', 15, true);


--
-- Name: User_Role_ID_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."User_Role_ID_seq"', 20, true);


--
-- Name: Role Role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Role"
    ADD CONSTRAINT "Role_pkey" PRIMARY KEY ("ID_Role");


--
-- Name: User_Role User_Role_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User_Role"
    ADD CONSTRAINT "User_Role_pkey" PRIMARY KEY ("ID");


--
-- Name: User User_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY ("ID_User");


--
-- Name: User_Role User_Role_Role_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User_Role"
    ADD CONSTRAINT "User_Role_Role_fkey" FOREIGN KEY ("Role") REFERENCES public."Role"("ID_Role") NOT VALID;


--
-- Name: User_Role User_Role_User_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."User_Role"
    ADD CONSTRAINT "User_Role_User_fkey" FOREIGN KEY ("User") REFERENCES public."User"("ID_User") NOT VALID;


--
-- PostgreSQL database dump complete
--

